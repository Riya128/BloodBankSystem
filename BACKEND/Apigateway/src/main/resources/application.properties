server.port=8999
spring.application.name=api-gateway
eureka.client.service-url.defaultZone:http://localhost:9881/eureka

spring.cloud.gateway.discovery.locator.enabled=true
##############  to access the apis with lower case names also ####################
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

################### creating routes manually ######################

# sign-up user
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://user-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/user/register
spring.cloud.gateway.routes[0].predicates[1]=Method=POST
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie


# log-in user
spring.cloud.gateway.routes[1].id=user-service 
spring.cloud.gateway.routes[1].uri=lb://user-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/user/login
spring.cloud.gateway.routes[1].predicates[1]=Method=POST
spring.cloud.gateway.routes[1].filters[0]=RemoveRequestHeader=Cookie


## edit user
spring.cloud.gateway.routes[2].id=user-service 
spring.cloud.gateway.routes[2].uri=lb://user-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/user/{id}
spring.cloud.gateway.routes[2].predicates[1]=Method=PUT
#this will only check if a token with bearer is coming or not
spring.cloud.gateway.routes[2].predicates[2]=Header=Authorization,Bearer(.*)
#spring.cloud.gateway.routes[2].filters[0]=AuthorizationHeaderFilter
spring.cloud.gateway.routes[2].filters[0]=RemoveRequestHeader=Cookie



#add and view donor
spring.cloud.gateway.routes[3].id=donor-service 
spring.cloud.gateway.routes[3].uri=lb://donor-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/donor/**
spring.cloud.gateway.routes[3].predicates[1]=Method=POST,GET
spring.cloud.gateway.routes[3].filters[0]=RemoveRequestHeader=Cookie




#register hospital
spring.cloud.gateway.routes[4].id=hospital-service
spring.cloud.gateway.routes[4].uri=lb://hospital-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/hospital/register
spring.cloud.gateway.routes[4].predicates[1]=Method=POST
spring.cloud.gateway.routes[4].filters[0]=RemoveRequestHeader=Cookie


# log-in hospital
spring.cloud.gateway.routes[5].id=hospital-service 
spring.cloud.gateway.routes[5].uri=lb://hospital-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/hospital/login
spring.cloud.gateway.routes[5].predicates[1]=Method=POST
spring.cloud.gateway.routes[5].filters[0]=RemoveRequestHeader=Cookie


## edit hospital
spring.cloud.gateway.routes[6].id=hospital-service 
spring.cloud.gateway.routes[6].uri=lb://hospital-service
spring.cloud.gateway.routes[6].predicates[0]=Path=/hospital/{id}
spring.cloud.gateway.routes[6].predicates[1]=Method=PUT
#this will only check if a token with bearer is coming or not
spring.cloud.gateway.routes[6].predicates[2]=Header=Authorization,Bearer(.*)
#spring.cloud.gateway.routes[6].filters[0]=AuthorizationHeaderFilter
spring.cloud.gateway.routes[6].filters[0]=RemoveRequestHeader=Cookie


#login admin
spring.cloud.gateway.routes[7].id=admin-service 
spring.cloud.gateway.routes[7].uri=lb://admin-service
spring.cloud.gateway.routes[7].predicates[0]=Path=/admin/login
spring.cloud.gateway.routes[7].predicates[1]=Method=POST
spring.cloud.gateway.routes[7].filters[0]=RemoveRequestHeader=Cookie


#get all users
spring.cloud.gateway.routes[8].id=user-service 
spring.cloud.gateway.routes[8].uri=lb://user-service
spring.cloud.gateway.routes[8].predicates[0]=Path=/user/allusers
spring.cloud.gateway.routes[8].predicates[1]=Method=GET
#this will only check if a token with bearer is coming or not
spring.cloud.gateway.routes[8].predicates[2]=Header=Authorization,Bearer(.*)
#spring.cloud.gateway.routes[8].filters[0]=AuthorizationHeaderFilter
spring.cloud.gateway.routes[8].filters[0]=RemoveRequestHeader=Cookie


#get all hospitals
spring.cloud.gateway.routes[9].id=hospital-service 
spring.cloud.gateway.routes[9].uri=lb://hospital-service
spring.cloud.gateway.routes[9].predicates[0]=Path=/hospital/allhospitals
spring.cloud.gateway.routes[9].predicates[1]=Method=GET
#this will only check if a token with bearer is coming or not
spring.cloud.gateway.routes[9].predicates[2]=Header=Authorization,Bearer(.*)
#spring.cloud.gateway.routes[9].filters[0]=AuthorizationHeaderFilter
spring.cloud.gateway.routes[9].filters[0]=RemoveRequestHeader=Cookie


#get all bloodbanks
spring.cloud.gateway.routes[10].id=bloodbank-service 
spring.cloud.gateway.routes[10].uri=lb://bloodbank-service
spring.cloud.gateway.routes[10].predicates[0]=Path=/bloodbank/allbloodbanks
spring.cloud.gateway.routes[10].predicates[1]=Method=GET
#this will only check if a token with bearer is coming or not
spring.cloud.gateway.routes[10].predicates[2]=Header=Authorization,Bearer(.*)
#spring.cloud.gateway.routes[10].filters[0]=AuthorizationHeaderFilter
spring.cloud.gateway.routes[10].filters[0]=RemoveRequestHeader=Cookie

#register as bloodbank
spring.cloud.gateway.routes[11].id=bloodbank-service 
spring.cloud.gateway.routes[11].uri=lb://bloodbank-service
spring.cloud.gateway.routes[11].predicates[0]=Path=/bloodbank/register
spring.cloud.gateway.routes[11].predicates[1]=Method=POST
spring.cloud.gateway.routes[11].filters[0]=RemoveRequestHeader=Cookie

#login as bloodbank
spring.cloud.gateway.routes[12].id=bloodbank-service 
spring.cloud.gateway.routes[12].uri=lb://bloodbank-service
spring.cloud.gateway.routes[12].predicates[0]=Path=/bloodbank/login
spring.cloud.gateway.routes[12].predicates[1]=Method=POST
spring.cloud.gateway.routes[12].filters[0]=RemoveRequestHeader=Cookie

#edit bloodbank's details
spring.cloud.gateway.routes[13].id=bloodbank-service 
spring.cloud.gateway.routes[13].uri=lb://bloodbank-service
spring.cloud.gateway.routes[13].predicates[0]=Path=/bloodbank/{id}
spring.cloud.gateway.routes[13].predicates[1]=Method=PUT
#this will only check if a token with bearer is coming or not
spring.cloud.gateway.routes[13].predicates[2]=Header=Authorization,Bearer(.*)
#spring.cloud.gateway.routes[13].filters[0]=AuthorizationHeaderFilter
spring.cloud.gateway.routes[13].filters[0]=RemoveRequestHeader=Cookie




##    delete donor
spring.cloud.gateway.routes[14].id=donor-service 
spring.cloud.gateway.routes[14].uri=lb://donor-service
spring.cloud.gateway.routes[14].predicates[0]=Path=/donor/{id}
spring.cloud.gateway.routes[14].predicates[1]=Method=DELETE
#this will only check if a token with bearer is coming or not
spring.cloud.gateway.routes[14].predicates[2]=Header=Authorization,Bearer(.*)
#spring.cloud.gateway.routes[14].filters[0]=AuthorizationHeaderFilter
spring.cloud.gateway.routes[14].filters[0]=RemoveRequestHeader=Cookie


